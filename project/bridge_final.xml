<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>chan take, release, takeHand, releaseHand;

bool hasFlashlight, side, buddy;

clock time;	


bool swap(bool b) { return not b; }</declaration>
	<template>
		<name x="32" y="16">Person</name>
		<parameter>const int delay</parameter>
		<declaration>clock y;


bool isOnTheLeft(bool sid) { return sid == false; }
bool isOnTheRight(bool sid) { return sid == true; }


bool someone(bool b) { return b == true; }

</declaration>
		<location id="id0" x="459" y="76">
			<name x="442" y="42">ReadytoCross</name>
		</location>
		<location id="id1" x="459" y="391">
			<name x="450" y="408">right</name>
		</location>
		<location id="id2" x="-153" y="391">
			<name x="-212" y="417">ReadyToReturn</name>
		</location>
		<location id="id3" x="-153" y="76">
			<name x="-161" y="42">left</name>
		</location>
		<init ref="id3"/>
		<transition color="#0000ff">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="561" y="238">y &gt;= delay</label>
			<label kind="synchronisation" x="561" y="204">releaseHand!</label>
			<nail x="552" y="229"/>
		</transition>
		<transition color="#0000ff">
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="0" y="-42">isOnTheLeft(side) and someone(hasFlashlight)</label>
			<label kind="synchronisation" x="101" y="-59">takeHand!</label>
			<label kind="assignment" x="118" y="-25">y = 0</label>
			<nail x="136" y="0"/>
		</transition>
		<transition color="#ff0000">
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="85" y="85">isOnTheLeft(side)</label>
			<label kind="synchronisation" x="119" y="68">take!</label>
			<label kind="assignment" x="8" y="102">y = 0,  hasFlashlight = swap(hasFlashlight)</label>
			<nail x="144" y="161"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-246" y="229">y &gt;= delay</label>
			<label kind="synchronisation" x="-229" y="204">release!</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="68" y="399">isOnTheRight(side)</label>
			<label kind="synchronisation" x="102" y="357">take!</label>
			<label kind="assignment" x="110" y="416">y = 0</label>
		</transition>
		<transition color="#ff0000">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="212" y="238">y &gt;= delay and not buddy</label>
			<label kind="synchronisation" x="272" y="212">release!</label>
			<label kind="assignment" x="153" y="263">hasFlashlight = swap(hasFlashlight)</label>
			<nail x="391" y="229"/>
		</transition>
	</template>
	<template>
		<name x="32" y="-16">Flashlight</name>
		<declaration>
                  </declaration>
		<location id="id4" x="-1122" y="-1487">
			<name x="-1139" y="-1521">held</name>
		</location>
		<location id="id5" x="-1691" y="-1479">
			<name x="-1707" y="-1511">free</name>
		</location>
		<location id="id6" x="-1122" y="-1173">
			<name x="-1130" y="-1156">two</name>
		</location>
		<location id="id7" x="-1691" y="-1173">
			<name x="-1708" y="-1155">one</name>
		</location>
		<init ref="id5"/>
		<transition color="#0000ff">
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-1071" y="-1351">takeHand?</label>
			<label kind="assignment" x="-1113" y="-1334">buddy = swap(buddy)</label>
		</transition>
		<transition color="#0000ff">
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-1802" y="-1360">release?</label>
			<label kind="assignment" x="-1827" y="-1334">side = swap(side)</label>
		</transition>
		<transition color="#0000ff">
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-1462" y="-1164">releaseHand?</label>
			<label kind="assignment" x="-1487" y="-1139">buddy = swap(buddy)</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-1428" y="-1581">take?</label>
			<nail x="-1402" y="-1547"/>
		</transition>
		<transition color="#ff0000">
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-1428" y="-1479">release?</label>
			<label kind="assignment" x="-1462" y="-1462">side = swap(side)</label>
			<nail x="-1394" y="-1428"/>
		</transition>
	</template>
	<system>TheDoctor = Person(1);
RiverSong = Person(2);
DonnaNoble = Person(5);
RoseTaylor = Person(10);


system TheDoctor, RiverSong, DonnaNoble, RoseTaylor, Flashlight;</system>
	<queries>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>É sempre possível um aventureiro andar a atravessar ponte

			</comment>
		</query>
		<query>
			<formula>A[] not (TheDoctor.right and time&lt;1)</formula>
			<comment>Um aventureiro não atravessa a ponte em menos tempo do que pode mesmo com outro mais rápido</comment>
		</query>
		<query>
			<formula>A[] not (RiverSong.right and time&lt;2)</formula>
			<comment>Um aventureiro não atravessa a ponte em menos tempo do que pode mesmo com outro mais rápido</comment>
		</query>
		<query>
			<formula>A[] not (DonnaNoble.right and time&lt;5)</formula>
			<comment>Um aventureiro não atravessa a ponte em menos tempo do que pode mesmo com outro mais rápido</comment>
		</query>
		<query>
			<formula>A[] not (RoseTaylor.right and time&lt;10)
			</formula>
			<comment>Um aventureiro não atravessa a ponte em menos tempo do que pode mesmo com outro mais rápido
</comment>
		</query>
		<query>
			<formula>E&lt;&gt; TheDoctor.right and RiverSong.right and DonnaNoble.right and RoseTaylor.right and time&lt;17</formula>
			<comment>A travessia pode ser feita em menos de 17 minutos</comment>
		</query>
		<query>
			<formula>A[] not ((TheDoctor.ReadyToReturn and RiverSong.ReadyToReturn and DonnaNoble.ReadyToReturn and RoseTaylor.ReadyToReturn) or 
         (TheDoctor.ReadyToReturn and RiverSong.ReadyToReturn and DonnaNoble.ReadyToReturn) or 
         (TheDoctor.ReadyToReturn and RiverSong.ReadyToReturn and RoseTaylor.ReadyToReturn) or
         (RiverSong.ReadyToReturn and DonnaNoble.ReadyToReturn and RoseTaylor.ReadyToReturn))</formula>
			<comment>A atravessar para o lado esquerdo só podem estar duas pessoas na ponte ao mesmo tempo</comment>
		</query>
		<query>
			<formula>A[] not ((TheDoctor.ReadytoCross and RiverSong.ReadytoCross and DonnaNoble.ReadytoCross and RoseTaylor.ReadytoCross) or 
         (TheDoctor.ReadytoCross and RiverSong.ReadytoCross and DonnaNoble.ReadytoCross) or 
         (TheDoctor.ReadytoCross and RiverSong.ReadytoCross and RoseTaylor.ReadytoCross) or
         (RiverSong.ReadytoCross and DonnaNoble.ReadytoCross and RoseTaylor.ReadytoCross))</formula>
			<comment>A atravessar para o lado direito só podem estar duas pessoas na ponte ao mesmo tempo
</comment>
		</query>
		<query>
			<formula>E&lt;&gt; TheDoctor.right and RiverSong.right and DonnaNoble.right and RoseTaylor.right and time==17
			</formula>
			<comment>A travessia pode ser feita em 17 minutos</comment>
		</query>
	</queries>
</nta>
